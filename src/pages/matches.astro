---
import BaseLayout from '../layouts/BaseLayout.astro';
import matchesData from '../../data/matches.json';
import seasonSchedule from '../../data/season-schedule.json';

const title = "Match Center";
const description = "View match details, scores, and highlights";

// Use site base path for links
const base = import.meta.env.BASE_URL;

// Helper function to determine home/away status
function getVenueInfo(match) {
  // First try to find the match in season schedule by match number
  const scheduleMatch = seasonSchedule.matches.find(m => m.match_number === match.match_number);
  
  if (scheduleMatch) {
    // Use the definitive home/away info from season schedule
    const isQPRHome = scheduleMatch.home_team.includes('Queens Park Rangers') || scheduleMatch.home_team.includes('QPR');
    return {
      isHome: isQPRHome,
      icon: isQPRHome ? 'üè†' : '‚úàÔ∏è',
      text: isQPRHome ? 'Home' : 'Away',
      class: isQPRHome ? 'home' : 'away'
    };
  }
  
  // Fallback logic if not found in schedule
  const isHome = match.location.toLowerCase().includes('home') || 
                 match.location.toLowerCase() === 'tbd';
  
  return {
    isHome,
    icon: isHome ? 'üè†' : '‚úàÔ∏è',
    text: isHome ? 'Home' : 'Away',
    class: isHome ? 'home' : 'away'
  };
}
---

<BaseLayout title={title} description={description}>
  <div class="container">
    <div class="matches-header">
      <h1>üèüÔ∏è Match Center</h1>
      <p>View match details, scores, and highlights.</p>
    </div>

    <div class="matches-grid">
      {matchesData.matches.map(match => {
        const venueInfo = getVenueInfo(match);
        // derive scores
        let qprScore = '-';
        let oppScore = '-';
        let isCancelled = match.result === 'cancelled';
        if (!isCancelled) {
          if (match.final_score && typeof match.final_score.qpr !== 'undefined') {
            qprScore = match.final_score.qpr;
            oppScore = match.final_score.opponent;
          } else if (typeof match.result === 'string') {
            const m = match.result.match(/^(\d+)-(\d+)/);
            if (m) {
              qprScore = m[1];
              oppScore = m[2];
            }
          }
        }
        return (
        <div class="match-card" data-match-id={match.id}>
          <div class="match-header">
            <div class="match-date">
              {new Date(match.date).toLocaleDateString('en-US', { 
                weekday: 'short',
                month: 'short', 
                day: 'numeric'
              })}
            </div>
            <div class="match-week">Week {match.week}</div>
            <div class={`venue-badge ${venueInfo.class}`}>
              <span class="venue-icon">{venueInfo.icon}</span>
              <span class="venue-text">{venueInfo.text}</span>
            </div>
          </div>

          <div class="match-teams">
            <div class="team home">
              <div class="team-name">QPR U11B</div>
              <div class="team-score">{isCancelled ? 'X' : (match.result === 'pending' ? '-' : qprScore)}</div>
            </div>
            <div class="vs">VS</div>
            <div class="team away">
              <div class="team-name">{match.opponent}</div>
              <div class="team-score">{isCancelled ? 'X' : (match.result === 'pending' ? '-' : oppScore)}</div>
            </div>
          </div>

          <div class="match-details">
            <div class="detail-item">
              <span class="label">üïê Kickoff:</span>
              <span class="value">{match.kickoff}</span>
            </div>
            <div class="detail-item">
              <span class="label">üìç Location:</span>
              <span class="value">{match.location}</span>
            </div>
            <div class="detail-item">
              <span class="label">üé´ Match #:</span>
              <span class="value">{match.match_number}</span>
            </div>
          </div>

          {match.result === 'pending' ? (
            <div class="match-status pending">
              <span>‚è≥ Upcoming Match</span>
            </div>
          ) : match.result === 'cancelled' ? (
            <div class="match-status cancelled">
              <span>‚ùå Cancelled</span>
              {match.reason && <div class="cancel-reason">{match.reason}</div>}
            </div>
          ) : (
            <div class="match-completed">
              {match.final_score && match.final_score.half_time && (
                <div class="half-time">Half-time: {match.final_score.half_time}</div>
              )}
              {match.scorers && match.scorers.length > 0 && (
                <div class="scorers-section">
                  <h4>‚öΩ Goal Scorers</h4>
                  <div class="scorers-list">
                    {match.scorers.map(name => (
                      <div class="scorer-item">
                        <span class="scorer-name">{name}</span>
                      </div>
                    ))}
                  </div>
                </div>
              )}
            </div>
          )}

          <a href={`${base}matches/${match.id}/`} class="match-link">
            View Full Details ‚Üí
          </a>
        </div>
        );
      })}
    </div>
  </div>
</BaseLayout>

<style>
  .matches-header {
    text-align: center;
    margin-bottom: var(--spacing-2xl);
  }
  .half-time {
    margin-bottom: var(--spacing-md);
    color: var(--color-text-light);
    font-style: italic;
  }

  .matches-header h1 {
    font-size: 3rem;
    background: linear-gradient(135deg, #1976d2 0%, #42a5f5 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin-bottom: var(--spacing-md);
  }

  .matches-grid {
    display: grid;
    gap: var(--spacing-lg);
    margin-bottom: var(--spacing-2xl);
  }

  .match-card {
    background: white;
    border-radius: 16px;
    padding: var(--spacing-xl);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    border: 2px solid transparent;
  }

  .match-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
    border-color: var(--color-primary);
  }

  .match-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--spacing-lg);
    padding-bottom: var(--spacing-md);
    border-bottom: 2px solid #f0f0f0;
    flex-wrap: wrap;
    gap: var(--spacing-sm);
  }

  .match-date {
    font-size: 1.2rem;
    font-weight: 700;
    color: var(--color-primary);
  }

  .match-week {
    background: var(--color-primary);
    color: white;
    padding: var(--spacing-xs) var(--spacing-sm);
    border-radius: 20px;
    font-size: 0.9rem;
    font-weight: 600;
  }

  .venue-badge {
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-xs);
    padding: var(--spacing-xs) var(--spacing-sm);
    border-radius: var(--radius);
    font-weight: 600;
    font-size: var(--font-size-sm);
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .venue-badge.home {
    background: linear-gradient(135deg, #00a651 0%, #00d064 100%);
    color: white;
    box-shadow: 0 2px 8px rgba(0, 166, 81, 0.3);
  }

  .venue-badge.away {
    background: linear-gradient(135deg, #1565c0 0%, #1976d2 100%);
    color: white;
    box-shadow: 0 2px 8px rgba(21, 101, 192, 0.3);
  }

  .venue-icon {
    font-size: 1em;
  }

  .match-teams {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: var(--spacing-lg);
    text-align: center;
  }

  .team {
    flex: 1;
  }

  .team-name {
    font-weight: 700;
    font-size: 1.1rem;
    margin-bottom: var(--spacing-xs);
  }

  .team-score {
    font-size: 2.5rem;
    font-weight: 900;
    color: var(--color-primary);
  }

  .vs {
    margin: 0 var(--spacing-lg);
    font-weight: 700;
    color: var(--color-text-light);
    font-size: 1.2rem;
  }

  .match-details {
    background: #f8f9fa;
    border-radius: 12px;
    padding: var(--spacing-md);
    margin-bottom: var(--spacing-lg);
  }

  .detail-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--spacing-xs) 0;
  }

  .label {
    font-weight: 600;
    color: var(--color-text-light);
  }

  .value {
    font-weight: 500;
  }

  .match-status.pending {
    text-align: center;
    background: linear-gradient(135deg, #fff3e0 0%, #ffe0b2 100%);
    padding: var(--spacing-md);
    border-radius: 12px;
    font-weight: 600;
    color: #e65100;
  }

  .match-status.cancelled {
    text-align: center;
    background: #ffebee;
    padding: var(--spacing-md);
    border-radius: 12px;
    font-weight: 700;
    color: #c62828;
  }

  .match-status.cancelled .cancel-reason {
    margin-top: var(--spacing-xs);
    font-weight: 500;
    color: #b71c1c;
  }

  .match-completed h4 {
    color: var(--color-primary);
    margin-bottom: var(--spacing-md);
    font-size: 1.1rem;
  }

  .scorers-section {
    margin-bottom: var(--spacing-lg);
  }

  .scorers-list {
    background: #e8f5e8;
    border-radius: 8px;
    padding: var(--spacing-md);
  }

  .scorer-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--spacing-xs) 0;
  }

  .scorer-name {
    font-weight: 600;
  }

  .scorer-time {
    background: #4caf50;
    color: white;
    padding: 2px 8px;
    border-radius: 12px;
    font-size: 0.8rem;
    font-weight: 600;
  }


  .match-link {
    display: block;
    text-align: center;
    margin-top: var(--spacing-lg);
    padding: var(--spacing-sm);
    background: var(--color-primary);
    color: white;
    text-decoration: none;
    border-radius: 8px;
    font-weight: 600;
    transition: background 0.3s ease;
  }

  .match-link:hover {
    background: #1565c0;
  }


  @media (max-width: 768px) {
    .matches-header h1 {
      font-size: 2rem;
    }

    .match-teams {
      flex-direction: column;
      gap: var(--spacing-md);
    }

    .vs {
      transform: rotate(90deg);
      margin: var(--spacing-sm) 0;
    }

  }
 
</style>

</BaseLayout>
