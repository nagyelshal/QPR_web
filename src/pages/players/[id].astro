---
import BaseLayout from '../../layouts/BaseLayout.astro';
import PlayerChip from '../../components/PlayerChip.astro';
import Notice from '../../components/Notice.astro';

export async function getStaticPaths() {
  const playerProfiles = await import('../../../data/player-profiles.json');
  
  return playerProfiles.players.map((player) => ({
    params: { id: player.id },
    props: { player },
  }));
}

const { player } = Astro.props;
const base = import.meta.env.BASE_URL;

// Calculate some derived stats
const averageMinutesPerGame = player.season_stats.games_played > 0 
  ? Math.round(player.season_stats.minutes_played / player.season_stats.games_played) 
  : 0;

const positionFrequency = player.season_stats.positions_played.reduce((acc, pos) => {
  acc[pos] = (acc[pos] || 0) + 1;
  return acc;
}, {});

const favoritePosition = Object.keys(positionFrequency).reduce((a, b) => 
  positionFrequency[a] > positionFrequency[b] ? a : b, 
  Object.keys(positionFrequency)[0] || 'N/A'
);
---

<BaseLayout title={`${player.name} - Player Profile`}>
  <div class="container player-profile-page">
    
    <!-- Player Header -->
    <header class="player-header">
      <div class="player-photo-section">
        <div class="player-photo">
          <img 
            src={player.photo} 
            alt={player.name}
            onerror="this.src='/images/players/placeholder.jpg'"
          />
          <div class="jersey-badge">
            #{player.jersey}
          </div>
        </div>
      </div>
      
      <div class="player-info">
        <h1 class="player-name">{player.name}</h1>
        <div class="player-details">
          <div class="detail-item">
            <span class="label">Age:</span>
            <span class="value">{player.basic_info.age}</span>
          </div>
          <div class="detail-item">
            <span class="label">Height:</span>
            <span class="value">{player.basic_info.height}</span>
          </div>
          <div class="detail-item">
            <span class="label">Favorite Position:</span>
            <span class="value">{player.basic_info.favorite_position}</span>
          </div>
          <div class="detail-item">
            <span class="label">Favorite Team:</span>
            <span class="value">{player.basic_info.favorite_team}</span>
          </div>
          <div class="detail-item">
            <span class="label">Favorite Player:</span>
            <span class="value">{player.basic_info.favorite_player}</span>
          </div>
        </div>
        
        <div class="fun-fact">
          <h3>‚ö° Fun Fact</h3>
          <p>{player.basic_info.fun_fact}</p>
        </div>
      </div>
    </header>

    <!-- Season Stats -->
    <section class="stats-section">
      <h2 class="section-title">üìä Season Statistics</h2>
      
      <div class="stats-grid">
        <div class="stat-card">
          <div class="stat-number">{player.season_stats.games_played}</div>
          <div class="stat-label">Games Played</div>
        </div>
        
        <div class="stat-card highlight">
          <div class="stat-number">{player.season_stats.goals}</div>
          <div class="stat-label">Goals ‚öΩ</div>
        </div>
        
        <div class="stat-card highlight">
          <div class="stat-number">{player.season_stats.assists}</div>
          <div class="stat-label">Assists üéØ</div>
        </div>
        
        <div class="stat-card">
          <div class="stat-number">{player.season_stats.clean_sheets}</div>
          <div class="stat-label">Clean Sheets üõ°Ô∏è</div>
        </div>
        
        <div class="stat-card">
          <div class="stat-number">{player.season_stats.minutes_played}</div>
          <div class="stat-label">Minutes Played</div>
        </div>
        
        <div class="stat-card">
          <div class="stat-number">{averageMinutesPerGame}</div>
          <div class="stat-label">Avg Minutes/Game</div>
        </div>
        
        <div class="stat-card captain">
          <div class="stat-number">{player.season_stats.captain_games}</div>
          <div class="stat-label">Captain Games üèÖ</div>
        </div>
        
        <div class="stat-card gk">
          <div class="stat-number">{player.season_stats.goalkeeper_games}</div>
          <div class="stat-label">GK Games ü•Ö</div>
        </div>
      </div>
    </section>

    <!-- Positions Played -->
    {player.season_stats.positions_played.length > 0 && (
      <section class="positions-section">
        <h2 class="section-title">üèÉ‚Äç‚ôÇÔ∏è Positions This Season</h2>
        <div class="positions-grid">
          {Object.entries(positionFrequency).map(([position, count]) => (
            <div class="position-card">
              <div class="position-name">{position}</div>
              <div class="position-count">{count} {count === 1 ? 'game' : 'games'}</div>
            </div>
          ))}
        </div>
        <p class="favorite-position">
          <strong>Most Played Position:</strong> {favoritePosition}
        </p>
      </section>
    )}

    <!-- Achievements -->
    {player.achievements.length > 0 && (
      <section class="achievements-section">
        <h2 class="section-title">üèÜ Achievements</h2>
        <div class="achievements-grid">
          {player.achievements.map((achievement) => (
            <div class="achievement-card">
              <div class="achievement-icon">{achievement.icon}</div>
              <div class="achievement-content">
                <h3 class="achievement-title">{achievement.title}</h3>
                <p class="achievement-description">{achievement.description}</p>
                <div class="achievement-date">{new Date(achievement.date).toLocaleDateString()}</div>
              </div>
            </div>
          ))}
        </div>
      </section>
    )}

    <!-- Match History -->
    {player.match_history.length > 0 && (
      <section class="match-history-section">
        <h2 class="section-title">üìÖ Match History</h2>
        <div class="match-history-list">
          {player.match_history.map((match) => (
            <div class="match-card">
              <div class="match-date">
                {new Date(match.date).toLocaleDateString('en-US', { 
                  weekday: 'short', 
                  month: 'short', 
                  day: 'numeric' 
                })}
              </div>
              <div class="match-details">
                <div class="match-opponent">vs {match.opponent}</div>
                <div class="match-position">Position: {match.position}</div>
                <div class="match-stats">
                  {match.minutes}min ‚Ä¢ {match.goals}‚öΩ ‚Ä¢ {match.assists}üéØ
                </div>
                {match.notes && (
                  <div class="match-notes">{match.notes}</div>
                )}
              </div>
            </div>
          ))}
        </div>
      </section>
    )}

    <!-- Back to Roster -->
    <div class="back-navigation">
      <a href={`${base}roster/`} class="btn btn-secondary">
        ‚Üê Back to Roster
      </a>
    </div>

  </div>
</BaseLayout>

<style>
  .player-profile-page {
    max-width: 1000px;
    margin: 0 auto;
    padding: var(--spacing-lg) var(--spacing-md);
  }

  .player-header {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: var(--spacing-xl);
    margin-bottom: var(--spacing-2xl);
    padding: var(--spacing-xl);
    background: linear-gradient(135deg, #1565c0 0%, #0d47a1 100%);
    color: white;
    border-radius: 16px;
    position: relative;
    overflow: hidden;
  }

  .player-header::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.1'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E") repeat;
    opacity: 0.3;
  }

  .player-photo-section {
    position: relative;
    z-index: 1;
  }

  .player-photo {
    width: 150px;
    height: 150px;
    position: relative;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 8px 24px rgba(0,0,0,0.3);
  }

  .player-photo img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .jersey-badge {
    position: absolute;
    top: -10px;
    right: -10px;
    background: #ff9800;
    color: white;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    font-size: 1.1rem;
    border: 3px solid white;
    box-shadow: 0 4px 12px rgba(0,0,0,0.3);
  }

  .player-info {
    position: relative;
    z-index: 1;
  }

  .player-name {
    font-size: 2.5rem;
    font-weight: 700;
    margin: 0 0 var(--spacing-lg) 0;
    background: linear-gradient(45deg, #ffffff, #e3f2fd);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .player-details {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: var(--spacing-md);
    margin-bottom: var(--spacing-lg);
  }

  .detail-item {
    display: flex;
    justify-content: space-between;
    padding: var(--spacing-sm) 0;
    border-bottom: 1px solid rgba(255,255,255,0.2);
  }

  .label {
    font-weight: 600;
    opacity: 0.9;
  }

  .value {
    font-weight: 500;
  }

  .fun-fact {
    background: rgba(255,255,255,0.1);
    padding: var(--spacing-md);
    border-radius: 8px;
    backdrop-filter: blur(10px);
  }

  .fun-fact h3 {
    margin: 0 0 var(--spacing-sm) 0;
    font-size: 1.1rem;
  }

  .fun-fact p {
    margin: 0;
    font-style: italic;
  }

  .section-title {
    font-size: 1.8rem;
    font-weight: 700;
    margin-bottom: var(--spacing-lg);
    color: var(--color-primary);
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
    gap: var(--spacing-md);
    margin-bottom: var(--spacing-2xl);
  }

  .stat-card {
    background: white;
    padding: var(--spacing-lg);
    border-radius: 12px;
    text-align: center;
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    transition: transform 0.2s ease;
    border: 2px solid transparent;
  }

  .stat-card:hover {
    transform: translateY(-2px);
  }

  .stat-card.highlight {
    border-color: #4caf50;
    background: linear-gradient(135deg, #4caf50, #45a049);
    color: white;
  }

  .stat-card.captain {
    border-color: #ff9800;
    background: linear-gradient(135deg, #ff9800, #f57c00);
    color: white;
  }

  .stat-card.gk {
    border-color: #1976d2;
    background: linear-gradient(135deg, #1976d2, #1565c0);
    color: white;
  }

  .stat-number {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: var(--spacing-xs);
  }

  .stat-label {
    font-size: 0.9rem;
    opacity: 0.9;
    font-weight: 600;
  }

  .positions-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: var(--spacing-md);
    margin-bottom: var(--spacing-lg);
  }

  .position-card {
    background: white;
    padding: var(--spacing-md);
    border-radius: 8px;
    text-align: center;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    border: 2px solid #e0e0e0;
  }

  .position-name {
    font-weight: 700;
    font-size: 1.2rem;
    color: var(--color-primary);
    margin-bottom: var(--spacing-xs);
  }

  .position-count {
    font-size: 0.9rem;
    color: var(--color-text-light);
  }

  .favorite-position {
    text-align: center;
    padding: var(--spacing-md);
    background: rgba(25, 118, 210, 0.1);
    border-radius: 8px;
    color: var(--color-primary);
  }

  .achievements-grid {
    display: grid;
    gap: var(--spacing-md);
    margin-bottom: var(--spacing-2xl);
  }

  .achievement-card {
    display: flex;
    align-items: center;
    gap: var(--spacing-md);
    background: white;
    padding: var(--spacing-lg);
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    border-left: 4px solid #4caf50;
  }

  .achievement-icon {
    font-size: 2rem;
    flex-shrink: 0;
  }

  .achievement-title {
    font-size: 1.2rem;
    font-weight: 600;
    margin: 0 0 var(--spacing-xs) 0;
    color: var(--color-primary);
  }

  .achievement-description {
    margin: 0 0 var(--spacing-xs) 0;
    color: var(--color-text);
  }

  .achievement-date {
    font-size: 0.85rem;
    color: var(--color-text-light);
  }

  .match-history-list {
    display: grid;
    gap: var(--spacing-md);
    margin-bottom: var(--spacing-2xl);
  }

  .match-card {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: var(--spacing-md);
    background: white;
    padding: var(--spacing-lg);
    border-radius: 12px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    border-left: 4px solid var(--color-primary);
  }

  .match-date {
    font-weight: 700;
    color: var(--color-primary);
    text-align: center;
    padding: var(--spacing-sm);
    background: rgba(25, 118, 210, 0.1);
    border-radius: 6px;
    font-size: 0.9rem;
  }

  .match-opponent {
    font-weight: 600;
    font-size: 1.1rem;
    margin-bottom: var(--spacing-xs);
  }

  .match-position {
    color: var(--color-text-light);
    margin-bottom: var(--spacing-xs);
  }

  .match-stats {
    font-weight: 600;
    color: var(--color-primary);
    margin-bottom: var(--spacing-xs);
  }

  .match-notes {
    font-style: italic;
    color: var(--color-text-light);
    font-size: 0.9rem;
  }

  .back-navigation {
    text-align: center;
    margin-top: var(--spacing-2xl);
    padding-top: var(--spacing-xl);
    border-top: 1px solid #e0e0e0;
  }

  @media (max-width: 768px) {
    .player-header {
      grid-template-columns: 1fr;
      text-align: center;
    }

    .player-photo {
      margin: 0 auto;
    }

    .player-details {
      grid-template-columns: 1fr;
    }

    .stats-grid {
      grid-template-columns: repeat(2, 1fr);
    }

    .match-card {
      grid-template-columns: 1fr;
    }
  }
</style>
